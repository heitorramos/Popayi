{"title":"POPAyI: Muscling Ordinal Patterns for low-complex and usability-aware transportation mode detection","markdown":{"yaml":{"title":"POPAyI: Muscling Ordinal Patterns for low-complex and usability-aware transportation mode detection","subtitle":"","author":"Isadora Cardoso-Pereira, João B. Borges, Aline C. Viana, Antonio A. F. Loureiro, **Heitor S. Ramos** - heitor@dcc.ufmg.br","format":{"revealjs":{"code-fold":true,"execute":{"enabled":true},"echo":true,"jupyter":"python3","slide-number":true,"theme":"default","controls":true,"progress":true,"smaller":true,"chalkboard":{"buttons":true,"chalk-width":1,"theme":"whiteboard"},"preview-links":"auto","logo":"common/logos.png","include-in-header":[{"text":"<style>\n.reveal .slide-logo {\n  max-height: unset;\n  height: 100px;\n}\n</style>\n"}],"style":"common/style.css","footer":"<https://www.dcc.ufmg.br/~ramosh/>"}}},"headingText":"Introduction","containsRefs":false,"markdown":"\n \n\n- Transportation Mode Detection (TMD) involves classifying mobility traces to identify the corresponding transport mode. It can provide valuable insights into the mobility preferences, aiding in epidemic prevention, traffic management, and improving quality of life\n\n- Most TMD literature relies on hand-crafted features (reaching hundreds of features) or computationally- and data-intensive DL methods, which pose challenges for resource-constrained Internet of Things (IoT) scenarios\n\n- We present POPAyI, an innovative strategy based on Ordinal Pattern (OP) transformation applied to mobility-related time series that is computationally efficient, scalable, and provides accurate transportation mode detection.\n\n## Ordinal Patterns\n\nA symbolic representation of time series dynamics, capturing intrinsic features without relying on predefined models or heavy computational resources. It needs two parameters:\n\n- Embedding dimension $D \\in \\mathbb{N}$ to determine the length of the patterns\n\n- Embedding delay $\\tau \\in \\mathbb N$ to define the interval between consecutive data points\n\n## Ordinal Patterns\n\n### A lightweight solution well-suited for edge computing applications, enabling on-device analytics while preserving privacy {.alert }\n\n## Ordinal Patterns\n![](img/ordinal_patterns.png){#op fig-align=\"center\"}\n\n\n## Ordinal Patterns Limitations\n\nTraditional OPs face limitations when dealing with multidimensional data (e.g., mobility)\n\n1. Absence of amplitude information\n  - Be invariant to non-linear monotonic transformation is helpful against noise, but it can be harmful when amplitude contains essential information\n\n  - Previous studies have incorporated amplitude into features extracted from OP, but its application to other OP features and representations remains limited\n\n2. Originally defined for univariate time series\n   - Previous studies have attempted to extend OP to multivariate data, but faced limitations such as increased computational complexity or loss of interpretability\n\n\n## Ordinal Patterns Limitations\n\n![](img/opLimitations.png){#opL fig-align=\"center\"}\n\n## Our approach: PoPayI\n\nPOPAyI (Polar Ordinal Patterns with Amplitude Information) is the first work to leverage amplitude information in a multivariate OP approach.\n\n### How POPAyI works?\n\n1. Converts 2D spatial data into symbolic patterns based on ordinal relationships between points\n\n2. Uses polar coordinates to handle 2D mobility data (latitude and longitude)\n\n3. Introduces amplitude information to distinguish variations in movement magnitude (e.g., slow vs. fast-moving vehicles)\n\n## How POPAyI works?\n\n![](img/popayi.png){#popayi fig-align=\"center\"}\n\n## Methodology\n\nA) Data Preprocessing:\n  - Segmentation: Trajectories are divided into segments based on stationary points or the end of the trajectory\n  - Data Handling: Removal of low-quality data, such as out-of-range GPS points and trajectories with fewer than 10 points.\n\n\n## Methodology \n\nB) POPAyI Transformation:\n\n  - Ordinal Pattern Transformation: Converts time series into ordinal patterns using a sliding window.\n  - Polar Coordinates: Patterns are based on the angle and distance of 2D points, capturing non-linear movement dynamics.\n  - Amplitude Information: Calculates the displacement (distance) between the first and last points in the window, allowing for better distinction between movement types (e.g., slow vs. fast)\n  \n## Methodology \n\n![](img/methodology.png){#popayiM1 fig-align=\"center\"}\n\n## Methodology\n\nC) Representations Derived from POPAyI:\n  - Probability Distribution: counts the occurrences of each ordinal pattern\n    - Used to compute features like Shannon Permutation Entropy (PE), which measures the randomness of the time series, and Statistical Complexity (SC), which quantifies the level of structure in the data\n  - Transition Network: A graph representation where nodes represent ordinal patterns, and edges represent transitions between patterns\n    - Extract features such as Probability of Self-Transition (how likely a pattern repeats itself), Number of Nodes and Edges, and Average Edge Weights, indicating how dynamic or stable the movement is\n\n## Methodology\n\n![](img/methodology2.png){#popayiM2 fig-align=\"center\"}\n\n## Methodology\n\nD) Feature Extraction:\n  - Features extracted from both the Probability Distribution (e.g., PE, SC) and the Transition Network (e.g., node/edge counts, self-transitions)\n  - Additional statistical features from the mobility data itself, such as mean, variance, max, and min values for distance and speed\nE) Classification:\n  - Features are fed into an XGBoost classifier\n\n## Methodology\n\n![](img/methodology3.png){#popayiM3 width=55% fig-align=\"center\"}\n\n## POPAyI advantages to TMD {.allowframebreaks}\n\n:::{.nonincremental}\n\n- Lightweight Approach\n  - Time complexity is O(n) due to small and constant embedding dimension ($D$) \n  - Ideal for resource-limited environments, such as IoT\n- Scalability\n  - Computational efficiency with linear time complexity\n  - Works well with large time series and requires minimal space\n- Resilience to Trajectory Size\n  - Handles trajectories of varying sizes (differently from Deep Learning methods)\n  - Adapts to real-world mobility patterns, regardless of trajectory length\n\n - Robustness\n    - Resilient to GPS errors and dynamic noise\n    - Ensures reliable detection in noisy environments.\n- Enhanced Representation\n  - Captures 2D temporal dynamics and incorporates amplitude.\n  - Improves accuracy in distinguishing transportation modes.\n:::\n\n## Experiments\n\n### Amplitude benefits from POPAyI\n\n**Goal:** Evaluate how incorporating amplitude improves detection of vehicle speed variations\n\n### Setup:\n  - We used Cologne dataset, which contains high-resolution vehicle trajectories with a temporal resolution of one second\n  - Separated into two groups: slow (2-5 m/s) and fast (6-30 m/s) vehicles\n  - Compare results with and without amplitude.\n\n\n## Experiments\n\n![With amplitude: Better separation of vehicle behaviors (clear clusters)](img/exp1.png){#exp1 fig-align=\"center\"}\n\n## Experiments\n\n![Without amplitude: Poor distinction between slow and fast vehicles](img/exp2.png){#exp2  fig-align=\"center\"}\n\n## Experiments \n\n### Conclusion: Amplitude information enhances the ability to capture mobility dynamics, improving detection accuracy.\n\n## Experiments \n\n### Transportation Mode Detection\n\n**Goals:** \n\n:::{.nonincremental}\n  - Predict the transportation mode based on spatiotemporal trajectory data.\n  - Evaluate the effectiveness of POPAyI in classifying different transportation modes.\n  - Compare POPAyI to state-of-the-art Machine Learning (ML) and Deep Learning (DL) methods.\n::: \n\n## Experiments \n\n### Transportation Mode Detection\n\n**Setup:**\n\n:::{.nonincremental}\n  - We used GeoLife dataset, which contains 182 users' GPS trajectories over 5 years and various transportation modes: walking, biking, car, bus, subway, train.\n  - Fixed-length segments of 500 points to ensure comparability across all models\n  - Classification using cross-validation with 5 folds and stratified classes\n::: \n\n## Experiments\n\n### Hyperparameters selection\n\n:::{.nonincremental}\n\n- Explored values:\n  - Embedding Dimension: D = 3, 4, 5\n  - Embedding Delay: τ = 1, 2\n  - Amplitude Threshold: q = 0.0005 to 3 (0.5 m to 3 km)\n- Selection Process:\n  - Used Successive Halving: progressively eliminated weaker configurations based on F1-score\n  - $\\tau$ = 2 consistently achieving the best results suggests that non-consecutive points capture more meaningful transport dynamics\n  - Difficulty of establishing a straightforward correlation between hyperparameter values\n:::\n\n### Final choice: D = 3, τ = 2, q = 0.0005 {.alert}\n\n## Experiments\n\n![](img/hyperparameters.png){#hp fig-align=\"center\"}\n\n## Experiments\n\n![](img/ml_comparison.png){#hp fig-align=\"center\"}\n\n## Experiments {.allowframebreaks}\n\n### Transportation Mode Detection - POPAyI vs. 1D OP and POP\n\n### 1D OP:\n:::{.nonincremental}\n\n  - Separates feature extraction for latitude and longitude.\n  - Captures ordinal relationships in 1D space but misses non-linear movement dynamics in 2D mobility data.\n:::\n### POP:\n:::{.nonincremental}\n\n  - Polar Ordinal Patterns (POP) use polar coordinates to represent 2D spatial relationships.\n  - Better suited to capturing complex movement behaviors like turns and changes in direction.\n:::\n### POPAyI:\n\n:::{.nonincremental}\n  - Incorporates amplitude information into POP, capturing both direction and magnitude of movement (e.g., speed changes).\n:::\n\n## Experiments\n\n![](img/1dxpopxpopayi.png){#1dpoppopayi fig-align=\"center\"}\n\n## Experiments\n\n![](img/results.png){#results fig-align=\"center\"}\n\n\n## Confusion Matrix \n\n  - Imbalanced classes might significantly impact classification\n  - Certain transportation modes may misclassify due to shared traffic characteristics and similar temporal dynamics\n  - Classifications are clearer between motor and non-motor transports due to distinct speed and distance behaviors\n  - Some misclassifications result from data quality issues\n  - Impact of False Positives/Negatives varies across ITS applications\n    - Acceptable mixing of transport types in urban planning.\n    - Critical applications require minimal false negatives for safety.\n    - POPAyI Advantage: Fewer false negatives between motorized and non-motorized transports enhance safety in critical applications\n\n## Confusion Matrix\n\n![](img/confMatrix.png){#confMatrix fig-align=\"center\"}\n\n## Conclusions\n\n- POPAyI demonstrates effective TMD by leveraging multivariate ordinal patterns and amplitude information\n- Achieves high accuracy with minimal computational resources, making it suitable for resource-constrained environments (e.g., IoT)\n- Outperforms traditional methods and DL approaches while maintaining a lightweight framework\n\n## Future Directions\n\n- Expand Dataset Applications: Test POPAyI on more diverse mobility datasets to validate generalizability.\n- Enhance Real-Time Adaptability: Improve processing algorithms for better performance in real-time applications.\n- Integrate with Smart City Infrastructure: Explore the use of POPAyI in smart city projects for traffic management and urban planning.\n- Address Misclassifications: Investigate methods to further reduce misclassifications, particularly between similar transportation modes.\n- Incorporate Additional Features: Enhance the model by integrating more features from mobility data, such as environmental factors affecting transport dynamics.\n\n\n","srcMarkdownNoYaml":"\n \n## Introduction\n\n- Transportation Mode Detection (TMD) involves classifying mobility traces to identify the corresponding transport mode. It can provide valuable insights into the mobility preferences, aiding in epidemic prevention, traffic management, and improving quality of life\n\n- Most TMD literature relies on hand-crafted features (reaching hundreds of features) or computationally- and data-intensive DL methods, which pose challenges for resource-constrained Internet of Things (IoT) scenarios\n\n- We present POPAyI, an innovative strategy based on Ordinal Pattern (OP) transformation applied to mobility-related time series that is computationally efficient, scalable, and provides accurate transportation mode detection.\n\n## Ordinal Patterns\n\nA symbolic representation of time series dynamics, capturing intrinsic features without relying on predefined models or heavy computational resources. It needs two parameters:\n\n- Embedding dimension $D \\in \\mathbb{N}$ to determine the length of the patterns\n\n- Embedding delay $\\tau \\in \\mathbb N$ to define the interval between consecutive data points\n\n## Ordinal Patterns\n\n### A lightweight solution well-suited for edge computing applications, enabling on-device analytics while preserving privacy {.alert }\n\n## Ordinal Patterns\n![](img/ordinal_patterns.png){#op fig-align=\"center\"}\n\n\n## Ordinal Patterns Limitations\n\nTraditional OPs face limitations when dealing with multidimensional data (e.g., mobility)\n\n1. Absence of amplitude information\n  - Be invariant to non-linear monotonic transformation is helpful against noise, but it can be harmful when amplitude contains essential information\n\n  - Previous studies have incorporated amplitude into features extracted from OP, but its application to other OP features and representations remains limited\n\n2. Originally defined for univariate time series\n   - Previous studies have attempted to extend OP to multivariate data, but faced limitations such as increased computational complexity or loss of interpretability\n\n\n## Ordinal Patterns Limitations\n\n![](img/opLimitations.png){#opL fig-align=\"center\"}\n\n## Our approach: PoPayI\n\nPOPAyI (Polar Ordinal Patterns with Amplitude Information) is the first work to leverage amplitude information in a multivariate OP approach.\n\n### How POPAyI works?\n\n1. Converts 2D spatial data into symbolic patterns based on ordinal relationships between points\n\n2. Uses polar coordinates to handle 2D mobility data (latitude and longitude)\n\n3. Introduces amplitude information to distinguish variations in movement magnitude (e.g., slow vs. fast-moving vehicles)\n\n## How POPAyI works?\n\n![](img/popayi.png){#popayi fig-align=\"center\"}\n\n## Methodology\n\nA) Data Preprocessing:\n  - Segmentation: Trajectories are divided into segments based on stationary points or the end of the trajectory\n  - Data Handling: Removal of low-quality data, such as out-of-range GPS points and trajectories with fewer than 10 points.\n\n\n## Methodology \n\nB) POPAyI Transformation:\n\n  - Ordinal Pattern Transformation: Converts time series into ordinal patterns using a sliding window.\n  - Polar Coordinates: Patterns are based on the angle and distance of 2D points, capturing non-linear movement dynamics.\n  - Amplitude Information: Calculates the displacement (distance) between the first and last points in the window, allowing for better distinction between movement types (e.g., slow vs. fast)\n  \n## Methodology \n\n![](img/methodology.png){#popayiM1 fig-align=\"center\"}\n\n## Methodology\n\nC) Representations Derived from POPAyI:\n  - Probability Distribution: counts the occurrences of each ordinal pattern\n    - Used to compute features like Shannon Permutation Entropy (PE), which measures the randomness of the time series, and Statistical Complexity (SC), which quantifies the level of structure in the data\n  - Transition Network: A graph representation where nodes represent ordinal patterns, and edges represent transitions between patterns\n    - Extract features such as Probability of Self-Transition (how likely a pattern repeats itself), Number of Nodes and Edges, and Average Edge Weights, indicating how dynamic or stable the movement is\n\n## Methodology\n\n![](img/methodology2.png){#popayiM2 fig-align=\"center\"}\n\n## Methodology\n\nD) Feature Extraction:\n  - Features extracted from both the Probability Distribution (e.g., PE, SC) and the Transition Network (e.g., node/edge counts, self-transitions)\n  - Additional statistical features from the mobility data itself, such as mean, variance, max, and min values for distance and speed\nE) Classification:\n  - Features are fed into an XGBoost classifier\n\n## Methodology\n\n![](img/methodology3.png){#popayiM3 width=55% fig-align=\"center\"}\n\n## POPAyI advantages to TMD {.allowframebreaks}\n\n:::{.nonincremental}\n\n- Lightweight Approach\n  - Time complexity is O(n) due to small and constant embedding dimension ($D$) \n  - Ideal for resource-limited environments, such as IoT\n- Scalability\n  - Computational efficiency with linear time complexity\n  - Works well with large time series and requires minimal space\n- Resilience to Trajectory Size\n  - Handles trajectories of varying sizes (differently from Deep Learning methods)\n  - Adapts to real-world mobility patterns, regardless of trajectory length\n\n - Robustness\n    - Resilient to GPS errors and dynamic noise\n    - Ensures reliable detection in noisy environments.\n- Enhanced Representation\n  - Captures 2D temporal dynamics and incorporates amplitude.\n  - Improves accuracy in distinguishing transportation modes.\n:::\n\n## Experiments\n\n### Amplitude benefits from POPAyI\n\n**Goal:** Evaluate how incorporating amplitude improves detection of vehicle speed variations\n\n### Setup:\n  - We used Cologne dataset, which contains high-resolution vehicle trajectories with a temporal resolution of one second\n  - Separated into two groups: slow (2-5 m/s) and fast (6-30 m/s) vehicles\n  - Compare results with and without amplitude.\n\n\n## Experiments\n\n![With amplitude: Better separation of vehicle behaviors (clear clusters)](img/exp1.png){#exp1 fig-align=\"center\"}\n\n## Experiments\n\n![Without amplitude: Poor distinction between slow and fast vehicles](img/exp2.png){#exp2  fig-align=\"center\"}\n\n## Experiments \n\n### Conclusion: Amplitude information enhances the ability to capture mobility dynamics, improving detection accuracy.\n\n## Experiments \n\n### Transportation Mode Detection\n\n**Goals:** \n\n:::{.nonincremental}\n  - Predict the transportation mode based on spatiotemporal trajectory data.\n  - Evaluate the effectiveness of POPAyI in classifying different transportation modes.\n  - Compare POPAyI to state-of-the-art Machine Learning (ML) and Deep Learning (DL) methods.\n::: \n\n## Experiments \n\n### Transportation Mode Detection\n\n**Setup:**\n\n:::{.nonincremental}\n  - We used GeoLife dataset, which contains 182 users' GPS trajectories over 5 years and various transportation modes: walking, biking, car, bus, subway, train.\n  - Fixed-length segments of 500 points to ensure comparability across all models\n  - Classification using cross-validation with 5 folds and stratified classes\n::: \n\n## Experiments\n\n### Hyperparameters selection\n\n:::{.nonincremental}\n\n- Explored values:\n  - Embedding Dimension: D = 3, 4, 5\n  - Embedding Delay: τ = 1, 2\n  - Amplitude Threshold: q = 0.0005 to 3 (0.5 m to 3 km)\n- Selection Process:\n  - Used Successive Halving: progressively eliminated weaker configurations based on F1-score\n  - $\\tau$ = 2 consistently achieving the best results suggests that non-consecutive points capture more meaningful transport dynamics\n  - Difficulty of establishing a straightforward correlation between hyperparameter values\n:::\n\n### Final choice: D = 3, τ = 2, q = 0.0005 {.alert}\n\n## Experiments\n\n![](img/hyperparameters.png){#hp fig-align=\"center\"}\n\n## Experiments\n\n![](img/ml_comparison.png){#hp fig-align=\"center\"}\n\n## Experiments {.allowframebreaks}\n\n### Transportation Mode Detection - POPAyI vs. 1D OP and POP\n\n### 1D OP:\n:::{.nonincremental}\n\n  - Separates feature extraction for latitude and longitude.\n  - Captures ordinal relationships in 1D space but misses non-linear movement dynamics in 2D mobility data.\n:::\n### POP:\n:::{.nonincremental}\n\n  - Polar Ordinal Patterns (POP) use polar coordinates to represent 2D spatial relationships.\n  - Better suited to capturing complex movement behaviors like turns and changes in direction.\n:::\n### POPAyI:\n\n:::{.nonincremental}\n  - Incorporates amplitude information into POP, capturing both direction and magnitude of movement (e.g., speed changes).\n:::\n\n## Experiments\n\n![](img/1dxpopxpopayi.png){#1dpoppopayi fig-align=\"center\"}\n\n## Experiments\n\n![](img/results.png){#results fig-align=\"center\"}\n\n\n## Confusion Matrix \n\n  - Imbalanced classes might significantly impact classification\n  - Certain transportation modes may misclassify due to shared traffic characteristics and similar temporal dynamics\n  - Classifications are clearer between motor and non-motor transports due to distinct speed and distance behaviors\n  - Some misclassifications result from data quality issues\n  - Impact of False Positives/Negatives varies across ITS applications\n    - Acceptable mixing of transport types in urban planning.\n    - Critical applications require minimal false negatives for safety.\n    - POPAyI Advantage: Fewer false negatives between motorized and non-motorized transports enhance safety in critical applications\n\n## Confusion Matrix\n\n![](img/confMatrix.png){#confMatrix fig-align=\"center\"}\n\n## Conclusions\n\n- POPAyI demonstrates effective TMD by leveraging multivariate ordinal patterns and amplitude information\n- Achieves high accuracy with minimal computational resources, making it suitable for resource-constrained environments (e.g., IoT)\n- Outperforms traditional methods and DL approaches while maintaining a lightweight framework\n\n## Future Directions\n\n- Expand Dataset Applications: Test POPAyI on more diverse mobility datasets to validate generalizability.\n- Enhance Real-Time Adaptability: Improve processing algorithms for better performance in real-time applications.\n- Integrate with Smart City Infrastructure: Explore the use of POPAyI in smart city projects for traffic management and urban planning.\n- Address Misclassifications: Investigate methods to further reduce misclassifications, particularly between similar transportation modes.\n- Incorporate Additional Features: Enhance the model by integrating more features from mobility data, such as environmental factors affecting transport dynamics.\n\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":true,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"0":"Aula*.qmd","keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","include-in-header":[{"text":"<style>\n.reveal .slide-logo {\n  max-height: unset;\n  height: 100px;\n}\n</style>\n"}],"output-file":"popayl.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"title":"POPAyI: Muscling Ordinal Patterns for low-complex and usability-aware transportation mode detection","subtitle":"","author":"Isadora Cardoso-Pereira, João B. Borges, Aline C. Viana, Antonio A. F. Loureiro, **Heitor S. Ramos** - heitor@dcc.ufmg.br","jupyter":"python3","slideNumber":true,"theme":"default","controls":true,"progress":true,"smaller":true,"chalkboard":{"buttons":true,"chalk-width":1,"theme":"whiteboard"},"previewLinks":"auto","logo":"common/logos.png","style":"common/style.css","footer":"<https://www.dcc.ufmg.br/~ramosh/>"}}},"projectFormats":[]}